cmake_minimum_required(VERSION 3.30)
project(C_codes)

set(CMAKE_CXX_STANDARD 14)

include_directories(.)
include_directories("C++ (personal_works)")
include_directories(C++_base__personal-learning)
include_directories(LeetCode)

add_executable(C_codes
    "C++ (personal_works)/Calcularot Versions/C++ (calculator).cpp"
    "C++ (personal_works)/Calcularot Versions/C++ (ful calculator) 2.0.cpp"
    "C++ (personal_works)/Calcularot Versions/C++ (ful calkulator).cpp"
    "C++ (personal_works)/CAT - just a cat/CAT \uF027 print .cpp"
    "C++ (personal_works)/output/С++(stolbiky).cpp"
    "C++ (personal_works)/output/С++(поиск чисел).cpp"
    "C++ (personal_works)/Some useless works/C++ (data\uF022namespace).cpp"
    "C++ (personal_works)/Some useless works/C++ (hungry\uF025).cpp"
    "C++ (personal_works)/Some useless works/Untitled-1.cpp"
    "C++ (personal_works)/Some useless works/новый 1.cpp"
    "C++ (personal_works)/Some useless works/новый 1.exe"
    "C++ (personal_works)/Troll BETA/C++ (troll BETA).cpp"
    "C++ (personal_works)/Troll BETA/C++(troll BETA).cpp"
    "C++ (personal_works)/Troll BETA/C++(troll BETA).exe"
    "C++ (personal_works)/C++ (troll OUT OF development).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (calculator program)/C++ (calculator program).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (const)/C++(const).dSYM/Contents/Resources/DWARF/C++(const)"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (const)/C++(const).dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (const)/C++(const)"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (const)/C++(const).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (conversion program)/C++(conversion program).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (if statement)/C++ (if statement).dSYM/Contents/Resources/DWARF/C++ (if statement)"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (if statement)/C++ (if statement).dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (if statement)/C++ (if statement)"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (if statement)/C++ (if statement).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (if statement)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (if statement)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (logical operators)/C++ (logical operaors).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (math functions)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (math functions)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (math functions)/С++ (usefull math functions).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (namespace)/C++ (Name space).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (namespace)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (start).dSYM/Contents/Resources/DWARF/C++ (start)"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (start).dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (переменные).dSYM/Contents/Resources/DWARF/C++ (переменные)"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (переменные).dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/Переменная1.dSYM/Contents/Resources/DWARF/Переменная1"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/Переменная1.dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (start).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (string).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/C++ (переменные).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/Переменная.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (start\uF022basic data tipes)/Переменная1.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (switch\uF022 if analog)/#include \uF023iostream\uF024.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (switch\uF022 if analog)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (switch\uF022 if analog)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (ternaty operator)/C++ (ternaty operator).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (ternaty operator)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++ (ternaty operator)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Arifmetic operators)/C++ (Arifmetic operators).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(arrays- массив)/C++(arrays).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(arrays- массив)/C++(how to iterate over an array).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(arrays- массив)/C++(how to pass arrays to function).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(arrays- массив)/C++(how to sort an arrays).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(enums)/C++(enums).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(fill() finction)/C++(fill() function).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(functions)/C++(functions).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(functions)/C++(Overloader function).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(functions)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(functions)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/C++(Credit card validator).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/C++(Number guess game).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/C++(quizz mini-game).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/C++(крестики-нолики BETA).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/C++(крестики-нолики).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/CppProperties.json"
    "C++_base__personal-learning/C++ (useful string methods)/C++(games-programs)/С++(Bank simulatur).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(hypotenuse calculator)/C++ (hypotenuse calculator).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(inheritance)/C++(inheritance).dSYM/Contents/Resources/DWARF/C++(inheritance)"
    "C++_base__personal-learning/C++ (useful string methods)/C++(inheritance)/C++(inheritance).dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++(inheritance)/C++(inheritance)"
    "C++_base__personal-learning/C++ (useful string methods)/C++(inheritance)/C++(inheritance).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(inheritance)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(inheritance)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(local\uF022global varibles)/C++(local\uF022global varibles).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(local\uF022global varibles)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(local\uF022global varibles)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Memory address)/C++(memory address EASY-V).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Multidimensional array)/C++(Multidimantional array.COUT).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Multidimensional array)/C++(Multidimensional array.BASE).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Objects\uF022Classes)/C++(Car\uF022recolor).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Objects\uF022Classes)/C++(Constructor\uF022\uF022Другой способо ия).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Objects\uF022Classes)/C++(NEW Obgects\uF022Classes).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Objects\uF022Classes)/C++(Objects\uF022Classes).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Objects\uF022Classes)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Objects\uF022Classes)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pass by reference)/C++(pass by reference).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pointers)/C++(NULL pointers).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pointers)/C++(pointers).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pointers)/CODE_RUNNER_FILE"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pointers)/CODE_RUNNER_FILE.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pointers)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(pointers)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(public\uF022private)/C++(public\uF022private).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(public\uF022private)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(public\uF022private)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(random event generator)/C++(random event generator).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(random event generator)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(random event generator)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(recursion)/C++(factorial).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(recursion)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(rundom number)/C++(rundlom numbers).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(sizeof() operator)/C++(sizeof()operator).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(structs)/C++(structs as arguments).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(structs)/C++(structs).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(structs)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(structs)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(template\uF023typename L\uF024  )/C++(template).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(template\uF023typename L\uF024  )/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(template\uF023typename L\uF024  )/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(typedef)/C++ (Typedef).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(useful string methods ~.erase).dSYM/C++(useful string methods ~.erase)"
    "C++_base__personal-learning/C++ (useful string methods)/C++(useful string methods ~.erase).dSYM/C++(useful string methods ~.erase).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(useful string methods ~.erase).dSYM/C++(useful string methods ~.insert).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(useful string methods ~.erase).dSYM/C++(useful string methods).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/C++ (User input ~cin).dSYM/Contents/Resources/DWARF/C++ (User input ~cin)"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/C++ (User input ~cin).dSYM/Contents/Info.plist"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/C++ (User input ~cin)"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/C++ (User input ~cin).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/C++ (User input ~cin).exe"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(User input ~cin)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/C++(break & continue ~do).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/C++(do while loops).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/C++(for loops).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/C++(foreach loop).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/C++(nested loops).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/C++(while loops).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(while loops)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(~return)/C++(return \uF020names\uF020).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(~return)/C++(return).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Действия со ~string)/tempCodeRunnerFile"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Действия со ~string)/tempCodeRunnerFile.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Действия со ~string)/Дана строка. Выведите в консоль длину этой строки.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Действия со ~string)/Дана строка. Выведите в консоль последний символ строки.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/C++(Действия со ~string)/Даны два слова. Проверьте, что первые буквы этих слов совпадают.cpp"
    "C++_base__personal-learning/C++ (useful string methods)/С++(sleep_for)/C++(задержка между действиями).cpp"
    "C++_base__personal-learning/C++ (useful string methods)/С++(sleep_for)/Второй вариант.cpp"
    "LeetCode/Answer/15. 3Sum (ANSWER) .cpp"
    "LeetCode/Answer/1792. Maximum Average Pass Ratio_ANSWER.cpp"
    "LeetCode/Answer/Add_2_Number(Задание 2, ОТВЕТ).cpp"
    "LeetCode/Answer/Longest Sbustring Without Repeating Characters(Задание 3-- ОТВЕТ   ОТВЕТ   ).cpp"
    "LeetCode/Answer/Merge Sorted Array(Задание 88 ОТВЕТ).cpp"
    "LeetCode/Answer/String to Integer (Задание 8 ОТВЕТ!!!).cpp"
    "LeetCode/Answer/Sum of Numbers(Задание 1 ОТВЕТ).cpp"
    "LeetCode/build/Debug/12.Integer to Roman.o"
    LeetCode/build/Debug/outDebug
    "LeetCode/output/23. Merge k Sorted Lists"
    "LeetCode/output/26. Remove Duplicates from Sorted Array"
    "LeetCode/output/28. Find the Index of the First Occurrence in a String"
    "LeetCode/11. Container With Most Water.cpp"
    "LeetCode/12. Integer to Roman.cpp"
    "LeetCode/13. Roman to Integer.cpp"
    "LeetCode/14. Longest Common Prefix.cpp"
    "LeetCode/15. 3Sum (ANSWER) .cpp"
    "LeetCode/15. 3Sum.cpp"
    "LeetCode/16. 3Sum Closest.cpp"
    "LeetCode/17. Letter Combinations of a Phone Number.cpp"
    "LeetCode/1760. Minimum Limit of Balls in a Bag.cpp"
    "LeetCode/1792. Maximum Average Pass Ratio.cpp"
    LeetCode/18.4Sum
    LeetCode/18.4Sum.cpp
    "LeetCode/19. Remove Nth Node From End of List.cpp"
    "LeetCode/1930. Unique Length-3 Palindromic Subsequences.cpp"
    "LeetCode/20. Valid Parentheses.cpp"
    "LeetCode/2054. Two Best Non-Overlapping Events.cpp"
    "LeetCode/21. Merge Two Sorted Lists.cpp"
    "LeetCode/22. Generate Parentheses.cpp"
    "LeetCode/23. Merge k Sorted Lists"
    "LeetCode/23. Merge k Sorted Lists.cpp"
    "LeetCode/2337. Move Pieces to Obtain a String.cpp"
    "LeetCode/26. Remove Duplicates from Sorted Array"
    "LeetCode/26. Remove Duplicates from Sorted Array.cpp"
    "LeetCode/28. Find the Index of the First Occurrence in a String.cpp"
    "LeetCode/29. Divide Two Integers.cpp"
    "LeetCode/Add_2_Number(Задание 2).cpp"
    "LeetCode/Add_2_Number(Задание 2, ОТВЕТ).cpp"
    "LeetCode/Find the Minimum Number of Fibonacci Numbers Whose Sum Is K( Задание 1414).cpp"
    LeetCode/helper.cpp
    "LeetCode/Longest Palindromic Sub string(Задание 5).cpp"
    "LeetCode/Longest Sbustring Without Repeating Characters(Задание 3).cpp"
    "LeetCode/Longest Sbustring Without Repeating Characters(Задание 3-- ОТВЕТ   ОТВЕТ   ).cpp"
    "LeetCode/Median of Two Sorted Arrays (Задание 4).cpp"
    "LeetCode/Merge Sorted Array(Задание 88 ОТВЕТ).cpp"
    "LeetCode/Merge Sorted Array(Задание 88).cpp"
    "LeetCode/Palindrome Number(Задание 9).cpp"
    "LeetCode/Regular Expression Matching(Задание 10).cpp"
    "LeetCode/Remove Duplicates from Sorted Array(Задание 26).cpp"
    "LeetCode/Remove Element (Задание 27).cpp"
    "LeetCode/Reverse Integer( Задание 7, переворот челых чисел).cpp"
    "LeetCode/Running Sum of Array (Задача 1480).cpp"
    "LeetCode/String to Integer (Задание 8 ОТВЕТ!!!).cpp"
    "LeetCode/String to Integer (Задание 8).cpp"
    "LeetCode/Sum of Number(Задание 1).cpp"
    "LeetCode/Sum of Numbers(Задание 1 ОТВЕТ).cpp"
    "LeetCode/Zigzag Conversion ( Задание 6).cpp"
    LeetCode/zzz_tempCodeRunnerFile.cpp
    ListNode_Progect
    ListNode_Progect.cpp)
